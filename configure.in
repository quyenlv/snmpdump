dnl Process this file with autoconf to produce a configure script.
dnl
dnl $Id$

AC_INIT(src/snmpdump.c)

SNMPDUMP_MAJOR=0
SNMPDUMP_MINOR=4
SNMPDUMP_PATCHLEVEL=6

VERSION="$SNMPDUMP_MAJOR.$SNMPDUMP_MINOR.$SNMPDUMP_PATCHLEVEL"
AC_SUBST(VERSION)

AM_INIT_AUTOMAKE(snmpdump, $VERSION)

dnl create a config.h file (Automake will add -DHAVE_CONFIG_H)
AM_CONFIG_HEADER(src/config.h)

ISODATE=`date +%Y-%m-%d`
AC_SUBST(ISODATE)

AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_CC

AC_PATH_PROG(FLEX, "flex")
if test -z "${FLEX}" ; then
  echo "NOTE: We will not be able to build scanner C code from flex sources."
fi

AC_PATH_PROG(BISON, "bison")
if test -z "${BISON}" ; then
  echo "NOTE: We will not be able to build parser C code from bison sources."
fi

dnl Checks for libraries.
AM_PATH_XML2(2.0.0, [], AC_MSG_ERROR(snmpdump requires libxml2))
PKG_CHECK_MODULES(OPENSSL, openssl)
AC_SUBST(OPENSSL_CFLAGS)
AC_SUBST(OPENSSL_LIBS)
PKG_CHECK_MODULES(LIBANON, libanon)
AC_SUBST(LIBANON_CFLAGS)
AC_SUBST(LIBANON_LIBS)

#----------------------------------------------------------------------------
#       Checking for the libpcap library.
#----------------------------------------------------------------------------

AC_CHECK_HEADER([pcap.h],,
    [AC_MSG_ERROR([cannot find pcap headers])])
AC_CHECK_LIB([pcap],[pcap_dispatch],,AC_MSG_ERROR(canot find pcap library))

#----------------------------------------------------------------------------
#       Checking for the libnids library.
#----------------------------------------------------------------------------

AC_MSG_CHECKING(for libnids)
AC_ARG_WITH(libnids,
[  --with-libnids=DIR      use libnids in DIR],
[ case "$withval" in
  yes|no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -f $withval/src/nids.h -a -f $withval/src/libnids.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        NIDSINC="-I$withval/src"
        NIDSLIB="-L$withval/src -lnids"
     elif test -f $withval/include/nids.h -a -f $withval/lib/libnids.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        NIDSINC="-I$withval/include"
        NIDSLIB="-L$withval/lib -lnids"
     else
        AC_ERROR(nids.h or libnids.a not found in $withval)
     fi
     ;;
  esac ],
[ if test -f ${prefix}/include/nids.h; then
     NIDSINC="-I${prefix}/include"
     NIDSLIB="-L${prefix}/lib -lnids"
  elif test -f /usr/include/nids.h; then
     NIDSLIB="-lnids"
  else
     AC_MSG_RESULT(no)
     AC_ERROR(libnids not found)
  fi
  AC_MSG_RESULT(yes) ]
)
save_cppflags="$CPPFLAGS"
CPPFLAGS="$NIDSINC"
AC_MSG_CHECKING(whether libnids version is good)
AC_EGREP_HEADER(pcap_filter, nids.h, AC_MSG_RESULT(yes), 
   [ AC_MSG_RESULT(no); AC_ERROR(libnids version 1.13 or greater required) ])
CPPFLAGS="$save_cppflags"
AC_SUBST(NIDSINC)
AC_SUBST(NIDSLIB)

AC_CHECK_MEMBER([struct nids_prm.pcap_desc],
                [AC_DEFINE([HAVE_LIBNIDS_PCAP_DESC], 1, 
                  [Define to 1 if libnids supports nids_prm.pcap_desc])],
		[], [#include <nids.h>])

#----------------------------------------------------------------------------
#       Checking for the libsmi library.
#----------------------------------------------------------------------------

AM_PATH_LIBSMI

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h time.h string.h)

AC_STRUCT_TM

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.

dnl Further substitutions

AC_OUTPUT(Makefile src/Makefile scripts/Makefile doc/Makefile test/Makefile)
